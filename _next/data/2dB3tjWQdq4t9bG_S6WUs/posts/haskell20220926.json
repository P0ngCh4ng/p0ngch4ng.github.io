{"pageProps":{"postData":{"id":"haskell20220926","contentHtml":"<h3>問題1</h3>\n<p>【問1】ランダムにアルファベット小文字の1文字表示を繰り返してください。'z'が現れたら\"END\"と表示して終了してください。</p>\n<pre><code>import System.Random\n\nrandAlpha = randomRIO ('a', 'z')\n\nmain :: IO ()\nmain = do\n    r &#x3C;- randAlpha\n    print r\n    if r == 'z' then print \"END\"  else main\n    \n</code></pre>\n<p>randomRIO関数はタプルをとってIOに包んだ文字(IOモナド)を返す関数\n学んだこと\n&#x3C;- 演算子は、値をモナドから取り出してrに束縛するときに使っている。</p>\n<p>printは <code>a -> IO()</code> 型だが、ここでは変数<strong>r</strong>は抜き出されて値のみが束縛されているので、print関数に代入できる。\nHaskellでのif文は if ... then... elseという使い方なので注意</p>\n<h3>問題2</h3>\n<p>【問2】階乗を求める関数factを、アクションを返す関数に書き換えてください。</p>\n<pre><code>fact 0 = 1\nfact n | n > 0 = n * fact (n - 1)\n\nmain = do\n    print $ fact 5\n\t```\n実行結果\n120\nヒント: fact 0 = return 1\n\n\n\n```haskell\nfact 0 = return 1\nfact n | n > 0 = do\n    n' &#x3C;- fact (n - 1)\n    return $ n * n'\n\nmain = do\n    print =&#x3C;&#x3C; fact 5\n\t```\n\nreturnを使うと関数はアクション（ほとんどの場合モナド）を返却する。\nこの問題は関数をdoで包むのが盲点だった。\nn'に&#x3C;-でfact関数の戻り値を束縛しているが、この行を書くときにdoブロックに分けてある必要があった。\nおそらくbind関数を使えばdoを使わずにワンライナーで記述可能。\n\n\n### 問題３\n【問3】リストをランダムに並べ替える関数shuffleを実装してください。\n\n\nわからない....\nまた次回!\n</code></pre>\n","title":"Haskell練習1","date":"2022-9-26","tag":"programming"}},"__N_SSG":true}